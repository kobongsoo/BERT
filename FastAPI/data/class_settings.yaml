# 모델 관련 변수
model:
  MODEL_PATH: '../../data11/model/kpf-sbert-v1.1' # 모델 경로
  POLLING_MODE: 'mean'  # 폴링모드*(mean, cls, max 중 1나)
  OUT_DIMENSION: 768    # 임베딩 모델 출력 차원(128, 768)

# 임베딩 변수
embedding:
  EMBEDDING_METHOD: 0   # 임베딩 방식(0=문장클러스터링, 1=문장평균임베딩, 2=문장임베딩)
  FLOAT_TYPE: 'float32' # 임베딩 출력 벡터 타입('float32', 'float16')

# 클러스터링 전역 변수
custring:
  NUM_CLUSTERS_VARIABLE: True  # **True이면 문장길이에 따라 클러스터링수를 다르게 함, False이면 클러스터링 계수가 고정.
  CLUSTRING_MODE: "kmeans"  # "kmeans" = k-평균 군집 분석, kmedoids =  k-대표값 군집 분석
  NUM_CLUSTERS: 10          # 클러스터링 계수 
  OUTMODE: "mean"           # 클러스터링후 출력벡터 정의(kmeans 일때 => mean=평균벡터 출력, max=최대값벡터출력 / kmedoids 일때=>mean=평균벡터, medoid=대표값벡터)

# 문장 전처리
preprocessing:
  REMOVE_SENTENCE_LEN: 8     # 문장 길이가 8이하면 제거 
  REMOVE_DUPLICATION: True  # 중복된 문장 제거(*중복된 문장 제거 안할때 1%정도 정확도 좋음)
  
# Faiss 변수
faiss:
    INDEX_METHOD: 0 # 0= Cosine Similarity 적용(IndexFlatIP 사용), 1= Euclidean Distance 적용(IndexFlatL2 사용)
    
# 환경 관련
env:
  LOG_PATH: './log/classification'  # 로그경로
  SEED: 111               # **seed 값 (**변경하면, 기존 임베딩벡터값과 다른 값이 나옴)
  GPU: 'cpu'              # 'auto'=gpu서버면 gpu, 아니면 cpu, 'cpu'=무조건 CPU로 동작 (소문자)
